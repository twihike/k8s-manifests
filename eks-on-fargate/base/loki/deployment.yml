---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: tk-system
  name: loki
  labels:
    app: loki
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3100"
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.3.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/loki.yaml
            - -config.expand-env=true
          envFrom:
            - configMapRef:
                name: loki-config
            - secretRef:
                name: aws-secret
          ports:
            - containerPort: 3100
          readinessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 45
            timeoutSeconds: 9
          livenessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 45
            timeoutSeconds: 9
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config-volume
              mountPath: /etc/loki
            - name: data-volume
              mountPath: /data
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      volumes:
        - name: config-volume
          configMap:
            name: loki-config
        - name: data-volume
          emptyDir: {}
